{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","themeProvider/themeProvider.js","components/util/camelCaseMaker.js","store/leftSide/action/actionCreators.js","store/leftSide/action/actionTypes.js","components/util/textfield.js","components/util/lineBreak.js","components/leftSide/profile/profile.js","components/util/checkBox.js","components/util/textArea.js","components/util/makeComponent/mainCoponent.js","components/util/makeComponent/listItem.js","components/util/makeComponent/main.js","components/leftSide/objective/objective.js","components/leftSide/work/work.js","components/leftSide/education/education.js","components/leftSide/awards/awards.js","components/leftSide/certifications/certifications.js","components/util/makeComponent/secondaryComponent/secondaryComponent.js","components/util/makeComponent/secondaryComponent/secondary.js","components/leftSide/skills/skills.js","components/leftSide/hobbies/hobbies.js","components/leftSide/languages/languagesComponent.js","components/leftSide/languages/languages.js","components/leftSide/references/references.js","components/leftSide/extras/extras.js","pages/leftSide/tabPanel.jsx","pages/leftSide/leftSide.jsx","components/showcase/templates/defaultTheme/templateBody.js","components/showcase/templates/defaultTheme/defaultTemplate.js","components/showcase/pdfGenerate/pdfGenerate.js","pages/showCase/showCase.jsx","pages/rightSide/rightSide.jsx","layout/layout.jsx","app/App.jsx","store/leftSide/reducer/reducer.js","constant/jsonFile.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","theme","createMuiTheme","typography","fontFamily","join","itemlebel","fontSize","color","itemDes","palette","primary","main","secondary","responsiveFontSizes","camalCaseMaker","text","a","toLowerCase","trim","split","map","t","length","charAt","toUpperCase","slice","renameObjectKey","oldObj","oldName","newName","newObj","Object","forEach","key","value","console","log","resetObj","current","hasOwnProperty","removeUnderScore","data","removeUnderScoreText","i","push","dt","addInputValue","tabObj","type","path","tab","addTabValue","oldValue","addlistItem","item","deleteListValue","list","useStyles","makeStyles","width","padding","input","margin","spacing","textOverflow","label","textAlign","Textfield","placeholder","classes","dispatch","useDispatch","stateLabelValue","useSelector","state","items","TextField","className","onChange","target","attributes","InputLabelProps","InputProps","startAdornment","InputAdornment","position","style","fill","root","border","LineBreak","tabPanelDesign","background","Profile","useState","open","setOpen","Grid","container","xs","display","gridTemplateColumns","gridGap","Button","size","marginTop","variant","onClick","startIcon","acceptedFiles","cancelButtonText","submitButtonText","maxFileSize","filesLimit","onClose","onSave","files","reader","FileReader","onload","readyState","result","readAsDataURL","showPreviews","showFileNamesInPreview","checkboxHoder","checkbox","inpBase","letterSpacing","CheckBox","handleChange","FormControlLabel","control","Checkbox","checked","shouldshow","labelPlacement","InputBase","defaultValue","inputProps","TextArea","valueOfDescription","description","Typography","gutterBottom","TextareaAutosize","aria-label","rowsMin","marginLeft","heading","pxToRem","fontWeight","fontWeightRegular","gridRoot","flexGrow","icon","MainComponent","TabName","textFields","showBtn","isExpand","setIsExpand","stateLabelkey","CollapseComponents","UnCollapseComponents","tf","divValue","field","ExpansionPanel","expanded","ExpansionPanelSummary","prv","expandIcon","aria-controls","ExpansionPanelDetails","marginBottom","showList","table","mainTableStyle","tableStyle","ListItem","itemData","index","handleDelete","getKeyByValue","object","find","iteratableData","iteratablekey","listItems","nonCamelCase","charCodeAt","nonCamelCaseMaker","justifyContent","cellpadding","Main","name","setvalue","fullList","splice","val","Container","maxWidth","listItem","Objective","Work","Education","Awards","Certifications","grid","iconbtn","SecondaryComponent","IconButton","Secondary","Skills","tabName","Hobbies","paddingLeft","backgroundColor","LanguagesComponent","ratingValue","setRatingValue","borderBottom","Rating","event","newValue","Languages","References","Extras","TabPanel","props","children","other","role","hidden","aria-labelledby","Box","p","TabsHolder","borderRight","LeftSide","React","setValue","AppBar","Tabs","tabs","indicatorColor","textColor","scrollButtons","inf","Tab","allProps","borderRadius","listHead","secContainer","flexWrap","secItem","TemplateBody","info","objective","work_experience","education","awards","certifications","skill","hobby","languages","references","extra_curriculam","labelStyle","textDecoration","List","objectiveHeader","orgName","startDate","endDate","institutionName","major","grade","title","subtitle","authority","phoneNumber","emailAddress","languageName","level","rating","curriculamName","curriculamDetails","imgContainer","marginRight","nameContainer","img","height","occuPation","location","iconHolder","DefaultTemplate","mainData","src","profile","photoUrl","firstName","lastName","occupation","parmanentAddress","ListItemIcon","currentAddress","email","website","card","PdfGenerate","forwardedRef","everyItems","assign","Card","ref","inputRef","ShowCase","reff","createRef","rightSide","paper","Pages","App","ThemeProvider","initial_state","JSON","parse","stringify","reducer","action","oldKey","newKey","resetedState","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8edf00f9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 204;","import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\n\r\nlet theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: [\r\n          'Roboto Slab'\r\n        ].join(','),\r\n        \r\n        itemlebel: {\r\n            fontSize: 30,\r\n            color : 'red'\r\n          },\r\n\r\n        itemDes: {\r\n            fontSize: 20,\r\n          },\r\n    },\r\n    palette: {\r\n        primary: {\r\n            // main: '#d6983a'\r\n            main: '#42c99a'\r\n            // main: '#3db6ba'\r\n        },\r\n        secondary: {\r\n            main: '#f5f5f5'\r\n        },\r\n       \r\n    }\r\n})\r\n\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default theme;","export const nonCamelCaseMaker = text => {\r\n    const data = []   \r\n    var nonCamelCase = []\r\n\r\n    for( var i = 0 ; i < text.length ; i++){\r\n      data.push(text[i])\r\n    }\r\n    \r\n    data.map( dt  => ((dt.charCodeAt(0) > 65) && (dt.charCodeAt(0) < 90)) ? \r\n        nonCamelCase.push(` ${dt}`) : nonCamelCase.push(dt)  \r\n    )\r\n    \r\n    nonCamelCase = nonCamelCase.join('')\r\n    nonCamelCase = nonCamelCase.charAt(0).toUpperCase() + nonCamelCase.slice(1)\r\n\r\n   \r\n    return nonCamelCase;\r\n  }\r\n  \r\n\r\nexport const camalCaseMaker = text => {\r\n\r\n    text = text.toLowerCase()\r\n    const a = text.trim().split(' ').map( t => t.toLowerCase())\r\n    if(a.length >= 2){\r\n        const b = a[0] +  a[1].charAt(0).toUpperCase() + a[1].slice(1)\r\n        return b\r\n    }\r\n\r\n    return a[0]\r\n}\r\n\r\nexport const renameObjectKey = (oldObj, oldName, newName) => {\r\n    oldName = camalCaseMaker(oldName)\r\n    newName = camalCaseMaker(newName)\r\n    \r\n    const newObj = {};\r\n\r\n    Object.keys(oldObj).forEach(key => {\r\n        const value = oldObj[key];\r\n\r\n        if (key === oldName) {\r\n            newObj[newName] = value;\r\n        } else {\r\n            newObj[key] = value;\r\n        }\r\n    });\r\nconsole.log(newObj);\r\n\r\n    return newObj;\r\n}\r\n\r\n\r\nexport const resetObj = current => {\r\n\r\n    for (var key in current){\r\n        if (current.hasOwnProperty(key)){\r\n            \r\n            if (typeof current[key] === 'string'){ \r\n                current[key] = '';               \r\n            }\r\n        }\r\n    }\r\n\r\n    return current\r\n\r\n}\r\n\r\n\r\nexport const removeUnderScore = text => {\r\n    const data = []   \r\n    var removeUnderScoreText = []\r\n\r\n    for( var i = 0 ; i < text.length ; i++){\r\n      data.push(text[i])\r\n    }\r\n    \r\n    data.map( dt  => (dt === '_') ? \r\n        removeUnderScoreText.push(' ') : removeUnderScoreText.push(dt)  \r\n    )\r\n\r\n    return removeUnderScoreText\r\n}\r\n","import { ADD_TAB_VALUE ,\r\n         ADD_INPUT_VALUE , \r\n         ADD_LIST_ITEM , \r\n        RESET_OBJ,\r\n        DELETE_LIST_VALUE\r\n     } from './actionTypes'\r\n\r\nimport {camalCaseMaker} from '../../../components/util/camelCaseMaker'\r\n\r\n \r\n\r\nexport const addInputValue = tabObj => ({\r\n    type : ADD_INPUT_VALUE ,\r\n    path : camalCaseMaker(tabObj.path) ,\r\n    tab : camalCaseMaker(tabObj.tab) , \r\n    value : tabObj.value\r\n})\r\n\r\n\r\nexport const addTabValue = tabObj => ({\r\n    type : ADD_TAB_VALUE ,\r\n    oldValue : tabObj.oldValue ,\r\n    value : tabObj.value\r\n})\r\n\r\n\r\nexport const addlistItem = tabObj => ({\r\n    type : ADD_LIST_ITEM ,\r\n    tab : camalCaseMaker(tabObj.tab) , \r\n    item : tabObj.item\r\n})\r\n\r\n\r\nexport const resetObj = tabObj => ({\r\n    type : RESET_OBJ ,\r\n    tab : tabObj.tab\r\n})\r\n\r\n\r\nexport const addRatingValue = tabObj => ({\r\n    type : ADD_INPUT_VALUE ,\r\n    path : camalCaseMaker(tabObj.path) ,\r\n    tab : camalCaseMaker(tabObj.tab) , \r\n    value : tabObj.value.newValue\r\n})\r\n\r\nexport const deleteListValue = tabObj => ({\r\n    type: DELETE_LIST_VALUE ,\r\n    tab : camalCaseMaker(tabObj.tab) , \r\n    list : tabObj.list\r\n})","export const ADD_INPUT_VALUE = 'ADD_INPUT_VALUE'\r\nexport const ADD_TAB_VALUE = 'ADD_TAB_VALUE'\r\n\r\nexport const ADD_LIST_ITEM = 'ADD_LIST_ITEM'\r\nexport const RESET_OBJ = 'RESET_OBJ'\r\n\r\nexport const DELETE_LIST_VALUE = 'DELETE_LIST_VALUE' ","import React from 'react'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport { useDispatch , useSelector} from 'react-redux'\r\nimport {addInputValue} from '../../store/leftSide/action/actionCreators'\r\nimport {camalCaseMaker} from '../util/camelCaseMaker'\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n  text : {\r\n      width : '90%' , \r\n      padding : '10px',\r\n  } ,\r\n  input: {\r\n    margin: theme.spacing(1),\r\n    width : '90%' , \r\n    padding : '8px 10px',\r\n    \"&::placeholder\": {\r\n      textOverflow: \"ellipsis !important\",\r\n      color: \"blue\",\r\n      fontSize: 14\r\n    }\r\n\r\n  },\r\n  label:{\r\n        color: 'green',\r\n        fontSize : 25,\r\n        textAlign : 'center',\r\n        padding: '0px 20px'\r\n  }\r\n\r\n}));\r\n\r\nconst Textfield = ({label , placeholder , tab  }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const stateLabelValue = useSelector(state => state[camalCaseMaker(tab)].items[camalCaseMaker(label)])\r\n    // const havePhoto = useSelector(state => state.profile.items.photoUrl)\r\n\r\n\r\n    const onChange = e => {\r\n\r\n        dispatch(addInputValue({\r\n            value:e.target.value,\r\n            path: e.target.attributes.placeholder.value,\r\n            tab : tab\r\n            }))\r\n    }\r\n\r\n\r\n   return (\r\n        <div>\r\n                <TextField\r\n                    className={classes.input}\r\n                    id=\"input-with-icon-textfield\"\r\n                    placeholder={label}\r\n                    onChange = {onChange}\r\n                    label={label}   \r\n                    value={stateLabelValue}             \r\n                    InputLabelProps={{\r\n                        className: classes.label \r\n                      }}\r\n                    InputProps={{\r\n                    startAdornment: (\r\n                      <>\r\n                        <InputAdornment position=\"start\">\r\n                            <SubdirectoryArrowRightIcon style={{fill:'transparent'}}/>\r\n                        </InputAdornment>\r\n\r\n                      </>\r\n                    ),\r\n                }} />\r\n            {/* <TextField className={classes.text}  label={label} placeholder={placeholder} variant=\"outlined\" /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Textfield\r\n\r\n\r\n\r\n{/* <input accept=\"image/*\" className={classes.input} id=\"icon-button-file\" type=\"file\" />\r\n<label htmlFor=\"icon-button-file\">\r\n  <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\r\n    <PhotoCamera />\r\n  </IconButton> */}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    border: '1px solid #ece6e6',\r\n    width: \"100%\",\r\n    position: 'relative',\r\n    textAlign : 'center',\r\n    // margin: '20px 0px'\r\n  },\r\n}));\r\n\r\nconst LineBreak = () => {\r\n  const classes = useStyles();\r\n  return <div className={classes.root}></div>;\r\n};\r\n\r\nexport default LineBreak;","import React,{useState} from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {DropzoneDialog} from 'material-ui-dropzone'\r\nimport Button from '@material-ui/core/Button';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport {addInputValue} from '../../../store/leftSide/action/actionCreators'\r\n\r\nimport TextField from '../../util/textfield'\r\nimport LineBreak from '../../util/lineBreak'\r\n\r\nimport ImagePreview from '../../showcase/pdfGenerate/imagePreview'\r\n\r\n\r\nconst tabPanelDesign = {\r\n        padding : '20px 10px',\r\n        background : '#f5f5f5'\r\n        \r\n}\r\n\r\nconst Profile = () => {\r\n    const dispatch = useDispatch();\r\n    const [open, setOpen] = useState(false);\r\n    const tabName = 'profile'\r\n\r\n    return (\r\n        <div style={tabPanelDesign}>\r\n        <Grid container spacing={3}>\r\n                            \r\n          <Grid item xs={12} \r\n                style={{  display: 'grid',\r\n                          gridTemplateColumns: '10fr 4fr' ,\r\n                          gridGap: 10,\r\n                        \r\n                        }}\r\n                >  \r\n\r\n                <TextField label='Photo Url'  tab = {tabName} /> \r\n\r\n                    <Button\r\n                    size=\"small\"\r\n                        style={{fontSize:15 , marginTop:30 }}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        onClick={() => setOpen(true)}\r\n                        startIcon={<BackupIcon style={{fontSize:22}}/>}\r\n                    >\r\n                        Photo\r\n                    </Button>\r\n\r\n                <DropzoneDialog\r\n                            acceptedFiles={['image/*']}\r\n                            cancelButtonText={\"cancel\"}\r\n                            submitButtonText={\"UpLoad Your Photo\"}\r\n                            maxFileSize={5000000}\r\n                            filesLimit={1}\r\n                            open={open}\r\n                            onClose={() => setOpen(false)}\r\n\r\n                            onSave={(files) => {\r\n\r\n                                         const reader = new FileReader();\r\n                                         reader.onload = () =>{\r\n                                           if(reader.readyState === 2){\r\n                                            dispatch(addInputValue({\r\n                                                value: [files[0] , reader.result] ,\r\n                                                path: 'Photo Url',\r\n                                                tab : 'profile'\r\n                                                }))  \r\n                                           }\r\n                                     }\r\n                                         reader.readAsDataURL(files[0])\r\n                                                                                                  \r\n                                setOpen(false);\r\n                            }}\r\n\r\n                            showPreviews={true}\r\n                            showFileNamesInPreview={true}\r\n                />\r\n\r\n          </Grid>\r\n\r\n          <LineBreak />\r\n          <Grid item xs={6}> \r\n              <TextField label='First Name'  tab = {tabName}/>\r\n          </Grid>\r\n          <Grid item xs={6}> \r\n              <TextField label='Last Name'  tab = {tabName}/>\r\n          </Grid>\r\n          <Grid item xs={10}> \r\n              <TextField label='Occupation'  tab = {tabName}/>\r\n          </Grid>\r\n\r\n          <LineBreak/>\r\n\r\n          <Grid item xs={12}>  \r\n              <TextField label='Parmanent Address'  tab = {tabName}/>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField label='Current Address '  tab = {tabName}/>\r\n          </Grid>\r\n\r\n          <LineBreak/>\r\n\r\n          <Grid item xs={12}>\r\n              <TextField label='Phone Number'  tab = {tabName}/>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField label='Website'  tab = {tabName}/>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n              <TextField label='Email'  tab = {tabName}/>\r\n          </Grid>\r\n\r\n          </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React from 'react'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\nimport { addInputValue } from '../../store/leftSide/action/actionCreators'\r\nimport { camalCaseMaker } from './camelCaseMaker';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    checkboxHoder : {\r\n      padding :'15px 50px',\r\n      border : '2px splid'\r\n    },\r\n    checkbox : {\r\n        color : '#93d9c1',\r\n        border : '1px solid',\r\n    },\r\n    inpBase : {\r\n        textAlign:'center',\r\n        padding :'0px 20px',\r\n        background : '#EAEAEA',\r\n        border:'1px sold #E0E0E0',\r\n        margin : '10px 20px 10px -90px',\r\n        fontSize : 25,\r\n        letterSpacing: 2\r\n    \r\n  },\r\n}));\r\n\r\nconst CheckBox = ({label , handleChange}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state)\r\n    const classes = useStyles();\r\n    const handleOnchange = e => {\r\n        handleChange(e.target.value) \r\n    }\r\n\r\n    const handleCheckBox = e => {\r\n        dispatch(addInputValue({\r\n            value:e.target.checked ,\r\n            path: 'shouldShow',\r\n            tab : label\r\n            }))\r\n    }\r\n    \r\n    return (\r\n\r\n        <div style={{display:'grid' , gridTemplateColumns: '50% auto' , textAlign:\"center\"}}>\r\n           <FormControlLabel\r\n                value=\"start\"\r\n                control={\r\n                    <Checkbox size='medium' \r\n                    className={classes.checkbox}\r\n                    color='primary' \r\n                    checked = {state[camalCaseMaker(label)].items.shouldshow}\r\n                    onChange={handleCheckBox}/>\r\n                    }\r\n                labelPlacement=\"end\"\r\n                className={classes.checkboxHoder}\r\n        />\r\n\r\n            <InputBase\r\n                \r\n                defaultValue={label}\r\n                inputProps={{ 'aria-label': 'naked' }}\r\n                onChange={handleOnchange}\r\n                className={classes.inpBase}\r\n            />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckBox\r\n","import React from 'react'\r\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport {addInputValue} from '../../store/leftSide/action/actionCreators'\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\n\r\n\r\nconst style = {\r\n        width:'90%' ,\r\n        background : '#EAEAEA',\r\n        border:'none',\r\n        padding:20,\r\n        fontSize: 15,\r\n        textAlign : 'center'\r\n    }\r\n\r\nconst TextArea = ({label}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const valueOfDescription = useSelector(state => state[label].items.description)\r\n\r\n    const onChange = e => {\r\n\r\n        dispatch(addInputValue({\r\n            value:e.target.value ,\r\n            path: 'description',\r\n            tab : label\r\n            }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n                DesCriPtion\r\n            </Typography>\r\n            <TextareaAutosize \r\n            aria-label=\"minimum height\" \r\n            style={style} rowsMin={10}\r\n            onChange = {onChange}\r\n            value={valueOfDescription}\r\n             placeholder={`Write About Your ${label}...`} />\r\n      </>\r\n    )\r\n}\r\n\r\nexport default TextArea\r\n","import React,{useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Textfield from '../textfield';\r\nimport TextArea from '../textArea'\r\nimport { Button } from '@material-ui/core';\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\nimport { addlistItem } from '../../../store/leftSide/action/actionCreators'\r\nimport { resetObj } from '../../../store/leftSide/action/actionCreators'\r\n\r\n \r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n        width: '108%',\r\n        marginLeft : '-12px'\r\n  },\r\n  heading: {\r\n    margin: '0 auto',\r\n    fontSize: theme.typography.pxToRem(20),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    color:'#df143c'\r\n  },\r\n  gridRoot : {\r\n     flexGrow:1\r\n  } , \r\n  icon : {\r\n    background : '#1a8cc4'\r\n  }\r\n  \r\n}));\r\n \r\nconst MainComponent = ({ id , TabName  , textFields , showBtn}) => {\r\n    const classes = useStyles();\r\n    const [isExpand , setIsExpand] = useState(false)\r\n\r\n    const dispatch = useDispatch();\r\n    const stateLabelkey = useSelector(state => Object.keys(state)[id])\r\n    const stateLabelValue = useSelector(state => state[stateLabelkey].items)\r\n\r\n    const tab = TabName\r\n    const CollapseComponents = []\r\n    const UnCollapseComponents = []\r\n\r\n\r\n    //    console.log(stateLabelValue , tab);\r\n\r\n       const handleClick = () => {\r\n        dispatch(addlistItem({item : stateLabelValue , tab : tab}))\r\n        dispatch (resetObj({tab: tab}))\r\n    }\r\n\r\n    textFields.map( tf => \r\n        {  \r\n               \r\n                if (typeof(tf) === 'object')\r\n                {\r\n                    let divValue = 12 /  tf.length;\r\n                    tf.map( field =>  CollapseComponents.push(<Grid item xs={divValue}>\r\n                                                                <Textfield label={field} tab={tab} />\r\n                                                            </Grid>))\r\n\r\n\r\n                } else {\r\n                    UnCollapseComponents.push(<Grid item xs={12}>\r\n                                                    <Textfield label={tf} tab={tab} />\r\n                                                </Grid> )\r\n                }\r\n       })\r\n    return (\r\n\r\n    <div className={classes.root}>\r\n            <ExpansionPanel \r\n                expanded={isExpand}                 \r\n            >\r\n            <ExpansionPanelSummary\r\n            onClick={() => setIsExpand(prv => !prv)} \r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"panel1a-content\"\r\n            id=\"panel1a-header\"\r\n            >\r\n            <Typography className={classes.heading}>{`Add ${TabName}`}</Typography>\r\n            </ExpansionPanelSummary>\r\n            <ExpansionPanelDetails>\r\n            <Typography>\r\n                <div className={classes.gridRoot}>\r\n                    <Grid container spacing={3}>\r\n\r\n                        {UnCollapseComponents } { CollapseComponents}\r\n\r\n                        <Grid item xs={12}>\r\n                            <TextArea label={TabName} />\r\n                        </Grid>  \r\n                    </Grid>\r\n\r\n                            {\r\n                                // showBtn &&  <Button variant=\"contained\" color=\"primary\" href=\"#contained-buttons\" onClick={() => { setIsExpand(false) ; handleClick() }}>\r\n                                //                     Add\r\n                                //     </Button>\r\n                         showBtn &&  <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className={classes.icon}\r\n                                        onClick={() => { setIsExpand(false) ; handleClick() }}\r\n                                        >\r\n                                        Include\r\n                                    </Button>\r\n                            }\r\n                </div>\r\n            </Typography>\r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default MainComponent\r\n","import React,{ useState} from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {Grid , Button} from '@material-ui/core';\r\nimport {nonCamelCaseMaker} from '../camelCaseMaker' \r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n          width: '100%',\r\n          textAlign: 'center',\r\n          marginBottom : 10\r\n    },\r\n    heading: {\r\n      margin: '0 auto',\r\n      fontSize: theme.typography.pxToRem(20),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n      color:'#000'\r\n    },\r\n    gridRoot : {\r\n       flexGrow:1,\r\n    },\r\n    showList : {\r\n        display: 'table',\r\n        width: '100%',\r\n        background: '#dedede',\r\n        textAlign: 'center',\r\n        fontSize : '1.5em',\r\n        fontWeight : 'bolder',\r\n        margin: '0 auto'\r\n    } ,\r\n\r\n    table : { \r\n        textAlign: 'center',\r\n        margin: 'auto',\r\n        padding: '1rem 0px',\r\n        width: '100%',\r\n     },\r\n\r\n    mainTableStyle : {\r\n        background : '#dbdddc'\r\n    }\r\n\r\n\r\n  }));\r\n\r\n  const tableStyle = {\r\n    textAlign: 'center',\r\n    margin: 'auto',\r\n    // border:'1px solid #dedede',\r\n    padding: '1rem ',\r\n    width: '90%',\r\n\r\n  }\r\n\r\n\r\nconst ListItem = ({itemData , index , handleDelete}) => { \r\n    const [isExpand , setIsExpand] = useState(false)\r\n    const classes = useStyles()\r\n    \r\n    const getKeyByValue = (object, value) =>  {\r\n        return Object.keys(object).find(key => object[key] === value);\r\n      }\r\n\r\n    const iteratableData =[]\r\n    const iteratablekey = []\r\n\r\n    for (var key in itemData){\r\n        if (itemData.hasOwnProperty(key)){\r\n            \r\n            if (typeof itemData[key] === 'string'){ \r\n                iteratableData.push(getKeyByValue(itemData , itemData[key]))               \r\n                iteratablekey.push(key)               \r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    const listItems = []\r\n\r\n    iteratableData.map( (data , index) =>  listItems.push( \r\n            <tr className={classes.mainTableStyle}>\r\n                 <td style={tableStyle}> { nonCamelCaseMaker(iteratablekey[index])} </td>\r\n                 <td style={tableStyle}> {itemData[data]} </td>\r\n            </tr>) )\r\n    \r\n    \r\n       \r\n    return (\r\n\r\n        itemData[iteratableData[0]] && (<div className={classes.root}>\r\n            <ExpansionPanel \r\n                expanded={isExpand} \r\n            >\r\n                <ExpansionPanelSummary\r\n                onClick={() => setIsExpand(prv => !prv)}  \r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                style={{background : '#f5f0e6'}}\r\n                >\r\n                <Typography className={classes.heading}>{itemData[iteratableData[0]]}</Typography>\r\n                </ExpansionPanelSummary>\r\n\r\n                <ExpansionPanelDetails style={{justifyContent:'center'}}>\r\n                <Typography>\r\n                    <div className={classes.gridRoot}>\r\n                        <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                        <div className=\"showList\">\r\n                            <table className={classes.table}  cellpadding=\"55\">\r\n                                    {/* <thead style={tableStyle}>\r\n                                        <tr style={tableStyle}>\r\n                                            <th style={tableStyle}></th>\r\n                                            <th style={tableStyle}></th>\r\n                                        </tr>\r\n                                    </thead> */}\r\n                                    <tbody style={tableStyle}>                                   \r\n                                        {listItems}                                                                              \r\n                                    </tbody>\r\n                            </table>\r\n                        </div>\r\n\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                                <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        style={{ background : '#42c99a'}}\r\n                                        onClick={() => {handleDelete(index) ; setIsExpand(false)} }\r\n                                > \r\n                                    Delete \r\n                                </Button>\r\n                        </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                </Typography>\r\n                </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n            </div>)\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n\r\n\r\n","import React,{useState} from 'react'\r\nimport { Container } from '@material-ui/core'\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\n\r\nimport CheckBox from '../checkBox';\r\nimport LineBreak from '../lineBreak';\r\nimport MainComponent from './mainCoponent';\r\nimport { addTabValue , deleteListValue } from '../../../store/leftSide/action/actionCreators'\r\nimport ListItem from './listItem';\r\n\r\n\r\n\r\n\r\n\r\nconst Main = ({data}) => {\r\n\r\n    const id = data.id\r\n    const TabName = data.name;\r\n    const textFields = data.textFields\r\n    const showBtn = data.showBtn\r\n    \r\n    const [value , setvalue] = useState('')\r\n    const dispatch = useDispatch();\r\n    const label = useSelector( state => Object.keys(state)[id])\r\n    const fullList = useSelector( state => state[label].items.list)\r\n\r\n    const handleChange = val => {\r\n        setvalue(val) \r\n        dispatch(addTabValue({ oldValue :label , value : val}))\r\n\r\n    }\r\n\r\n    const handleDelete = index => {\r\n        const newList = fullList.splice(index , 1 )\r\n        // console.log(' index :' , index)\r\n        // console.log(' new list :' , newList)\r\n        dispatch(deleteListValue({ tab : label , list : fullList}))\r\n    }\r\n\r\n  \r\n     \r\n\r\n    return (\r\n        <div>\r\n\r\n            <CheckBox label={value? value: TabName} handleChange={handleChange}/>\r\n            <LineBreak/>\r\n                <br/>\r\n            <Container maxWidth=\"sm\" >\r\n                {\r\n                    showBtn && fullList.map((listItem , index) => <ListItem itemData={listItem} index={index} handleDelete={handleDelete}/> )\r\n                }\r\n\r\n               <MainComponent  id={id} TabName={label}  textFields={textFields} showBtn={showBtn}/>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main\r\n","import React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\nconst Objective = () => {\r\n\r\n    \r\n    const data = {\r\n        id : 1 ,\r\n        name : 'Objective',\r\n        showBtn : false ,\r\n        textFields : [ 'Objective header' ],     \r\n    }\r\n\r\n    return ( \r\n            <Main data={data}/> \r\n    )\r\n}\r\n\r\nexport default Objective\r\n","// import React,{useState} from 'react'\r\n// import { Container } from '@material-ui/core'\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n\r\n// import CheckBox from '../../util/checkBox';\r\n// import LineBreak from '../../util/lineBreak';\r\n// import WorkComponent from './workComponent';\r\n\r\n\r\n\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n\r\n// container : {  \r\n//                 padding:0,\r\n//             }\r\n  \r\n// }));\r\n\r\n\r\n// const Work = () => {\r\n//     const classes = useStyles();\r\n//     const [value , setvalue] = useState('')\r\n\r\n//     const handleChange = val => {\r\n//         setvalue(val)\r\n//         console.log(val);   \r\n//     }\r\n//     const tabName = 'Work Experience'\r\n//     return (\r\n//         <div>\r\n//             <CheckBox label={value? value: tabName} handleChange={handleChange}/>\r\n//             <LineBreak/>\r\n\r\n//             <Container maxWidth=\"sm\" >\r\n//                <WorkComponent label={`Add ${tabName}`} />\r\n//             </Container>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default Work\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\nconst Work = () => {\r\n\r\n    const data = {\r\n        id : 2,\r\n        name : 'Work_Experience',\r\n        showBtn : true ,\r\n        textFields : [ 'Org Name' , 'Role' , [  'Start Date ' , 'End Date']],\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Main data={data}/>\r\n    )\r\n}\r\n\r\nexport default Work\r\n","import React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\nconst Education = () => {\r\n    const data = {\r\n        id : 3 ,\r\n        name : 'Education',\r\n        showBtn : true ,\r\n        textFields : [ 'Institution Name' , 'major' , 'Grade', [  'Start Date ' , 'End Date']],\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Main data={data}/>\r\n    )\r\n}\r\n\r\nexport default Education\r\n","import React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\n\r\nconst Awards = () => {\r\n    const data = {\r\n        id : 4 ,\r\n        name : 'Awards',\r\n        showBtn : true ,\r\n        textFields : [ 'Title' , 'Subtitle' ],\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Main data={data}/>\r\n    )\r\n}\r\n\r\nexport default Awards\r\n","import React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\nconst Certifications = () => {\r\n\r\n    const data = {\r\n        id : 5 ,\r\n        name : 'Certifications',\r\n        showBtn : true ,\r\n        textFields : [ 'Name' , 'Authority' ,],\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Main data={data}/>\r\n    )\r\n}\r\n\r\nexport default Certifications\r\n\r\n","import React,{useState} from 'react'\r\nimport {ExpansionPanel , Typography } from '@material-ui/core';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {  IconButton , Grid , Button} from '@material-ui/core';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\n\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\nimport { addlistItem } from '../../../../store/leftSide/action/actionCreators'\r\nimport { resetObj } from '../../../../store/leftSide/action/actionCreators'\r\n\r\nimport Textfield from '../../textfield';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '108%',\r\n        marginLeft : '-12px'\r\n        },\r\n    heading: {\r\n        margin: '0 auto', \r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color:'#df143c'\r\n        },\r\n    grid:{\r\n        display : 'flex',\r\n        justifyContent : 'space-Around'\r\n        },\r\n    iconbtn:{\r\n    \r\n        },\r\n    icon:{\r\n            fill : '#1a8cc4' , \r\n            fontSize : 35\r\n        }\r\n}));\r\n\r\nconst SecondaryComponent = ({label}) => {\r\n    const [isExpand , setIsExpand] = useState(false)\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const stateLabelValue = useSelector(state => state[label].items)\r\n    \r\n\r\n    const handleClick = () => {\r\n        dispatch(addlistItem({item : stateLabelValue , tab : label}))\r\n        dispatch (resetObj({tab: label}))\r\n\r\n    }\r\n \r\n    return (\r\n        <div className={classes.root}>\r\n            <ExpansionPanel \r\n                expanded={isExpand} \r\n                >\r\n            <ExpansionPanelSummary\r\n                onClick={() => setIsExpand(prv => !prv)}  \r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n            >\r\n                        <Typography className={classes.heading}>{`Add ${label}`}</Typography>\r\n            </ExpansionPanelSummary>\r\n\r\n            <ExpansionPanelDetails>\r\n                  \r\n                    <Grid container spacing={3} style={{flexGrow : 1}}>\r\n                        <Grid item xs={10}>\r\n                            <Textfield label={label} tab={label} placeholder={label}/>\r\n                        </Grid>\r\n                        <Grid item xs={2} className={classes.grid}>\r\n                            <IconButton className={classes.iconbtn}>\r\n                                <AddBoxIcon className={classes.icon} onClick={() => {  setIsExpand(false) ; handleClick()} }/>\r\n                            </IconButton>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        </div>\r\n           \r\n    )\r\n}\r\n\r\nexport default SecondaryComponent\r\n","import React,{useState} from 'react'\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\n\r\nimport CheckBox from '../../checkBox';\r\nimport LineBreak from '../../lineBreak';\r\nimport SecComp from './secondaryComponent'\r\nimport { addTabValue , deleteListValue} from '../../../../store/leftSide/action/actionCreators'\r\nimport { Container } from '@material-ui/core'\r\nimport  ListItem  from '../listItem'\r\n\r\n\r\n\r\n\r\nconst Secondary = ({label}) => {\r\n    const [value , setvalue] = useState('')\r\n    const dispatch = useDispatch();\r\n    const fullList = useSelector(state => state[label].items.list)\r\n\r\n\r\n    const handleChange = val => {\r\n        setvalue(val)        \r\n        dispatch(addTabValue({ oldValue :label , value : val}))\r\n    }\r\n\r\n    const handleDelete = index => {\r\n        const newList = fullList.splice(index , 1 )\r\n        dispatch(deleteListValue({ tab : label , list : fullList}))\r\n    }\r\n\r\n  \r\n    return (\r\n        <div>\r\n            <CheckBox label={value? value: label} handleChange={handleChange}/>\r\n            <LineBreak/>\r\n            <br/>\r\n\r\n\r\n            <Container maxWidth=\"sm\" >\r\n                {\r\n                     fullList.map((listItem ,index ) => <ListItem itemData={listItem} index={index} handleDelete={handleDelete}/> )\r\n                 }\r\n                <SecComp label={label}/>\r\n            </Container>\r\n            \r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Secondary\r\n","import React from 'react'\r\nimport SecondaryComponent from '../../util/makeComponent/secondaryComponent/secondary'\r\nimport {useSelector  } from 'react-redux'\r\n\r\nconst Skills = () => {\r\n    const tabName = useSelector(state => Object.keys(state)[6])\r\n\r\n    return (\r\n        <SecondaryComponent label={tabName} />\r\n    )\r\n}\r\n\r\nexport default Skills\r\n","import React from 'react'\r\nimport SecondaryComponent from '../../util/makeComponent/secondaryComponent/secondary'\r\nimport {useSelector  } from 'react-redux'\r\n\r\n\r\nconst Hobbies = () => {\r\n\r\n    const tabName = useSelector(state => Object.keys(state)[7])\r\n\r\n\r\n    return (\r\n        <SecondaryComponent label={tabName} />\r\n    )\r\n}\r\n\r\nexport default Hobbies\r\n ","import React,{useState} from 'react'\r\nimport {ExpansionPanel , Typography , Grid ,IconButton} from '@material-ui/core';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport {Button , Icon} from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\nimport { addlistItem ,\r\n         addRatingValue,\r\n         resetObj\r\n    } from '../../../store/leftSide/action/actionCreators'\r\n\r\n\r\nimport Textfield from '../../util/textfield';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '108%',\r\n        marginLeft : '-12px'\r\n        },\r\n    heading: {\r\n        margin: '0 auto',\r\n        fontSize: theme.typography.pxToRem(20),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        color:'#df143c'\r\n        },\r\n    label: {\r\n        color: 'green',\r\n        marginBottom : 25\r\n    },\r\n    container : {\r\n        justifyContent : 'center',\r\n        paddingLeft: 18\r\n    } ,\r\n    icon:{\r\n        backgroundColor : '#1a8cc4'\r\n    }\r\n\r\n}));\r\n\r\nconst LanguagesComponent = ({label}) => {\r\n    const [isExpand , setIsExpand] = useState(false)\r\n    const classes = useStyles();\r\n    const [ratingValue, setRatingValue] = useState(2);\r\n    const dispatch = useDispatch();\r\n    const stateLabelValue = useSelector(state => state[label].items)\r\n\r\n\r\n    const handleClick = () => {\r\n        dispatch(addlistItem({item : stateLabelValue , tab : label}))\r\n        dispatch (resetObj({tab: label}))\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <ExpansionPanel \r\n                expanded={isExpand} \r\n                >\r\n            <ExpansionPanelSummary\r\n                onClick={() => setIsExpand(prv => !prv)}  \r\n                expandIcon={<ExpandMoreIcon />}\r\n                aria-controls=\"panel1a-content\"\r\n                id=\"panel1a-header\"\r\n                style={{borderBottom: '1.5px solid darkgray'}}\r\n            >\r\n                        <Typography className={classes.heading}>{`Add ${label}`}</Typography>\r\n            </ExpansionPanelSummary>\r\n\r\n\r\n            <ExpansionPanelDetails>\r\n                <Grid container spacing={3}>\r\n\r\n\r\n\r\n                    <Grid item xs={12}>\r\n                        <Textfield label='Language Name' tab={label}/>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Textfield label='Level' tab={label}/>\r\n                    </Grid>\r\n                    <Grid container spacing={3} style={{flexGrow : 1}} className={classes.container}>\r\n                        <Grid item xs={5}>\r\n                                <Typography variant='h6' className={classes.label} > Rate Yourself   </Typography>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                        <Rating \r\n                            name=\"simple-controlled\"\r\n                            value={ratingValue} \r\n                            onChange={(event, newValue) => {\r\n                                setRatingValue(newValue);\r\n                                dispatch(addRatingValue({ path : 'rating' , tab: 'languages', value:{newValue}}))\r\n                                }}/>\r\n                         </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={10} style={{textAlign:'center'}}>\r\n                    <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.icon}\r\n                                onClick={() => { setIsExpand(false) ; handleClick() }}\r\n                            >\r\n                                Include\r\n                     </Button>\r\n                        {/* <IconButton >\r\n                                <AddBoxIcon className={classes.icon} onClick={() => { setIsExpand(false) ; handleClick() }}/>\r\n                        </IconButton> */}\r\n                    </Grid>\r\n                </Grid>\r\n \r\n            </ExpansionPanelDetails>\r\n        </ExpansionPanel>\r\n        </div>\r\n           \r\n    )   \r\n}\r\n\r\nexport default LanguagesComponent\r\n","import React,{useState} from 'react'\r\nimport CheckBox from '../../util/checkBox';\r\nimport LineBreak from '../../util/lineBreak';\r\nimport SecComp from './languagesComponent'\r\nimport { addTabValue , deleteListValue } from '../../../store/leftSide/action/actionCreators'\r\nimport ListItem from '../../util/makeComponent/listItem'\r\n\r\n\r\n\r\nimport { Container ,  Grid } from '@material-ui/core'\r\nimport {  useDispatch , useSelector } from 'react-redux'\r\n\r\nconst Languages = () => {\r\n\r\n    const [value , setvalue] = useState('')\r\n    const dispatch = useDispatch();\r\n    const label = useSelector( state => Object.keys(state)[8])\r\n    const fullList = useSelector(state => state[label].items.list)\r\n\r\n\r\n    const handleChange = val => {\r\n        setvalue(val)\r\n        dispatch(addTabValue({ oldValue :label , value : val}))\r\n    }\r\n\r\n    const handleDelete = index => {\r\n        const newList = fullList.splice(index , 1 )\r\n        dispatch(deleteListValue({ tab : label , list : fullList}))\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CheckBox label={value? value: label} handleChange={handleChange}/>\r\n            <LineBreak/>\r\n                <br/>\r\n            \r\n            <Container maxWidth=\"sm\" >\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12}>\r\n                        {\r\n                            fullList.map((listItem ,index ) => <ListItem itemData={listItem} index={index} handleDelete={handleDelete}/> )\r\n                        }\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <SecComp label={label}/>\r\n            </Container>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Languages\r\n","import React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\nconst References = () => {\r\n    const data = {\r\n        id : 9 ,\r\n        name : 'References',\r\n        showBtn : true ,\r\n        textFields : [ 'Name' , 'Position' , 'Phone Number ' , ' Email Address' ],\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Main data={data}/>\r\n    )\r\n}\r\n\r\nexport default References\r\n","import React from 'react'\r\nimport Main from '../../util/makeComponent/main'\r\n\r\n\r\nconst Extras = () => {\r\n    const data = {\r\n        id : 10 ,\r\n        name : 'Extra_curriculam',\r\n        showBtn : true ,\r\n        textFields : [ 'Curriculam Name ' , 'Curriculam Details' ],\r\n        \r\n    }\r\n    \r\n    return (\r\n        <Main data={data}/>\r\n    )\r\n}\r\nexport default Extras\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nimport Profile from '../../components/leftSide/profile/profile'\r\nimport Objective from '../../components/leftSide/objective/objective'\r\nimport Work from '../../components/leftSide/work/work'\r\n\r\n\r\nimport Education from '../../components/leftSide/education/education'\r\nimport Awards from '../../components/leftSide/awards/awards'\r\nimport Certifications from '../../components/leftSide/certifications/certifications'\r\n\r\n\r\nimport Skills from '../../components/leftSide/skills/skills'\r\nimport Hobbies from '../../components/leftSide/hobbies/hobbies'\r\nimport Languages from '../../components/leftSide/languages/languages'\r\n\r\n\r\nimport References from '../../components/leftSide/references/references'\r\nimport Extras from '../../components/leftSide/extras/extras'\r\n\r\n\r\n\r\nconst TabPanel = props => {\r\n    const { children, value, index, ...other } = props;\r\n  \r\n    return (\r\n      <div\r\n        role=\"tabpanel\"\r\n        hidden={value !== index}\r\n        id={`scrollable-auto-tabpanel-${index}`}\r\n        aria-labelledby={`scrollable-auto-tab-${index}`}\r\n        {...other}\r\n      >\r\n        {value === index && (\r\n          <Box p={2}>\r\n            <Typography>{children}</Typography>\r\n          </Box>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  TabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n  };\r\n\r\n\r\nconst TabsHolder = ({value}) => {\r\n    return (\r\n        <div>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Profile/>\r\n          {/* <Languages/> */}\r\n        \r\n      </TabPanel>\r\n      <TabPanel value={value} index={1} >\r\n        <Objective/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <Work/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <Education/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <Awards/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        <Certifications/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={6}>\r\n        <Skills/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={7}>\r\n        <Hobbies/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={8}>\r\n        <Languages/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={9}>\r\n        <References/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={10}>\r\n        <Extras/>\r\n      </TabPanel>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TabsHolder\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport {useSelector , useDispatch } from 'react-redux'\r\n\r\nimport {removeUnderScore} from '../../components/util/camelCaseMaker'\r\nimport Tabpanel from './tabPanel'\r\n\r\n\r\n\r\nconst allProps = (index) => {\r\n  return {\r\n    id: `scrollable-auto-tab-${index}`,\r\n    'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n  },\r\n  tab: {\r\n    color : '#3b3938',\r\n    fontWeight : 'bold',\r\n    padding : '10px -10px',\r\n    backgroundColor : '#f5f3f2' ,\r\n    // backgroundColor : '#fdf9f3' ,\r\n    // backgroundColor : '#cdf5f74d' ,\r\n    borderRight:'2.5px solid #fff',\r\n    \r\n  },\r\n\r\n\r\n}));\r\n\r\nconst LeftSide = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const tabName = useSelector(state => Object.keys(state))\r\n\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  \r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color='inherit' >\r\n        <Tabs\r\n          className = { classes.tabs}\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          {/* <Tab label=\"Item One\" {...allProps(0)} />\r\n          <Tab label=\"Item Two\" {...allProps(1)} />\r\n          <Tab label=\"Item Three\" {...allProps(2)} />\r\n          <Tab label=\"Item Four\" {...allProps(3)} />\r\n          <Tab label=\"Item Five\" {...allProps(4)} />\r\n          <Tab label=\"Item Six\" {...allProps(5)} />\r\n          <Tab label=\"Item Seven\" {...allProps(6)} /> */}\r\n\r\n\r\n          {\r\n            tabName.map( (inf , index) => <Tab className={classes.tab} label={removeUnderScore(inf)} {...allProps(index)} />)\r\n          }\r\n\r\n\r\n\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <Tabpanel value={value} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default LeftSide;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    Container,\r\n    Button,\r\n    Grid,\r\n    Typography,\r\n    List,\r\n    ListItem\r\n    } from '@material-ui/core';\r\nimport Rating from '@material-ui/lab/Rating';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    list : {\r\n        background:'linear-gradient(90deg, rgb(249, 241, 234) 0%, rgb(252, 248, 244) 33%, rgb(255, 255, 255) 100%)',\r\n        borderRadius : 10,\r\n        padding : 0\r\n    },\r\n    listHead : {\r\n        fontSize : 18 ,\r\n       borderBottom : '2px solid #fff',\r\n    },\r\n    secContainer : {\r\n        display : 'flex',\r\n        flexWrap : 'wrap'\r\n    },\r\n    secItem : {\r\n         background:'#3db6ba' ,\r\n         padding: '5px 15px',\r\n         borderRadius: 20,\r\n         fontSize: 12,\r\n         margin : '0px 3px 3px 0px'\r\n    }\r\n    \r\n}))\r\n\r\n\r\nconst TemplateBody = ({info}) => {\r\n    const classes = useStyles()\r\n\r\n    const objective = Object.keys(info)[1]\r\n    const work_experience = Object.keys(info)[2]\r\n    const education = Object.keys(info)[3]\r\n    const awards = Object.keys(info)[4]\r\n\r\n    const certifications = Object.keys(info)[5]\r\n    const skill = Object.keys(info)[6]\r\n    const hobby = Object.keys(info)[7]\r\n    const languages = Object.keys(info)[8]\r\n\r\n    const references = Object.keys(info)[9]\r\n    const extra_curriculam = Object.keys(info)[10]\r\n\r\n    const labelStyle = {\r\n        fontSize: 22,\r\n        color : '#f39c12' ,\r\n        textDecoration: 'underline overline' ,\r\n        margin : '10px 0px 5px'\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={0} >\r\n\r\n            { info[objective].shouldshow && \r\n                <Grid  item xs={12} > \r\n                    <Typography style={labelStyle}> {objective.toUpperCase()} </Typography>\r\n                   \r\n                        <List  className={classes.list}> \r\n\r\n                            {info[objective].objectiveHeader &&\r\n                            <ListItem  className={classes.listHead}> {info[objective].objectiveHeader} </ListItem>}\r\n                            { info[objective].description && \r\n                            <ListItem > {info[objective].description} </ListItem>}\r\n\r\n                        </List>\r\n                    \r\n                </Grid>\r\n            }\r\n\r\n            { info[work_experience].shouldshow && \r\n                <Grid  item xs={12} > \r\n                    <Typography style={labelStyle}> {work_experience.toUpperCase()} </Typography>\r\n\r\n                    {(info[work_experience].list.length > 0) && \r\n                        <List  className={classes.list}> \r\n                            {\r\n                                info[work_experience].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.orgName} </ListItem>\r\n                                        <ListItem> {item.role} </ListItem>\r\n                                        <ListItem> {'('}{item.startDate} {'-'} {item.endDate}{')'} </ListItem>\r\n                                        { item.description && <ListItem> {item.description} </ListItem>}\r\n                                    </ListItem>)\r\n                            }\r\n                        </List>\r\n                    }\r\n                </Grid>\r\n            }\r\n            { info[education].shouldshow && \r\n                <Grid  item xs={12} > \r\n                    <Typography style={labelStyle}> {education.toUpperCase()} </Typography>\r\n                    {(info[education].list.length > 0) && \r\n                        <List  className={classes.list}> \r\n                            {\r\n                                info[education].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.institutionName} </ListItem>\r\n                                        <ListItem> {item.major}{`(${item.grade})`} </ListItem>\r\n                                        { (item.startDate && item.endDate) && <ListItem> {`(${item.startDate} - ${item.endDate})`} </ListItem>}\r\n                                        { item.description && <ListItem> {item.description} </ListItem>}\r\n                                    </ListItem>)\r\n                            }\r\n                        </List>\r\n                    }\r\n                </Grid>\r\n            }\r\n\r\n\r\n\r\n                    {/* Six in partiton  */}\r\n\r\n\r\n\r\n            { info[awards].shouldshow && \r\n                <Grid  item xs={6} > \r\n                    <Typography style={labelStyle}> {`Honours & ${awards}`.toUpperCase()} </Typography>\r\n\r\n                    {(info[awards].list.length > 0) && \r\n                        <List  className={classes.list}> \r\n                            {\r\n                                info[awards].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.title} </ListItem>\r\n                                        { item.subtitle && <ListItem> {item.subtitle} </ListItem>}\r\n                                        { item.description && <ListItem> {item.description} </ListItem>}\r\n                                    </ListItem>)\r\n                            }\r\n                        </List>\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n            { info[certifications].shouldshow && \r\n                <Grid  item xs={6} > \r\n                    <Typography style={labelStyle}> {certifications.toUpperCase()} </Typography>\r\n\r\n                    {(info[certifications].list.length > 0) && \r\n                        <List  className={classes.list}> \r\n                            {\r\n                                info[certifications].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.name} </ListItem>\r\n                                        { item.authority && <ListItem> {item.authority} </ListItem>}\r\n                                        { item.description && <ListItem> {item.description} </ListItem>}\r\n                                    </ListItem>)\r\n                            }\r\n                        </List>\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n            { info[skill].shouldshow && \r\n                <Grid  item xs={6} > \r\n                    <Typography style={labelStyle}> {skill.toUpperCase()} </Typography>\r\n                   \r\n                    {(info[skill].list.length > 0) && \r\n                        <Container  className={classes.secContainer}> \r\n                            {\r\n                                info[skill].list.map( item => \r\n                                        <span className={classes.secItem}>{item[skill]}</span>\r\n                                    )\r\n                            }\r\n                        </Container>\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n            { info[hobby].shouldshow && \r\n                <Grid  item xs={6} > \r\n                    <Typography style={labelStyle}> {hobby.toUpperCase()} </Typography>\r\n\r\n                    {(info[hobby].list.length > 0) && \r\n                        <Container  className={classes.secContainer}> \r\n                            {\r\n                                info[hobby].list.map( item => \r\n                                        <span className={classes.secItem}>{item[hobby]}</span>\r\n                                    )\r\n                            }\r\n                        </Container>\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n            { info[references].shouldshow && \r\n                <Grid container item xs={12} > \r\n                    <Typography style={labelStyle}> {references.toUpperCase()} </Typography>\r\n                           \r\n                    {(info[references].list.length > 0) && \r\n                        <Container  className={classes.list}> \r\n                            {\r\n                                info[references].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.name} </ListItem>\r\n                                        { item.position && <ListItem> {item.position} </ListItem>}\r\n                                        { item.phoneNumber && <ListItem> {item.phoneNumber} </ListItem>}\r\n                                        { item.emailAddress && <ListItem> {item.emailAddress} </ListItem>}\r\n                                        { item.description && <ListItem> {item.description} </ListItem>}\r\n                                    </ListItem>)\r\n                            }\r\n                        </Container>\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n            { info[languages].shouldshow && \r\n                <Grid  item xs={6} > \r\n                    <Typography style={labelStyle}> {languages.toUpperCase()} </Typography>\r\n                   \r\n                    {(info[languages].list.length > 0) && \r\n                        <Container  className={classes.list}> \r\n                            {\r\n                                info[languages].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.languageName} </ListItem>\r\n                                        <ListItem>\r\n                                        { item.level && <ListItem> {item.level} </ListItem>}\r\n\r\n                                                {item.rating && <Rating \r\n                                                  name=\"simple-controlled\"\r\n                                                  value={item.rating}\r\n                                                  size=\"small\" />}\r\n                                             </ListItem>\r\n                                    </ListItem>)\r\n                            }\r\n                        </Container>\r\n                    }\r\n\r\n                </Grid>\r\n            }\r\n            { info[extra_curriculam].shouldshow && \r\n                <Grid  item xs={6} > \r\n                    <Typography style={labelStyle}> { `${extra_curriculam} Activities`.toUpperCase() }</Typography>\r\n                   \r\n                    {(info[extra_curriculam].list.length > 0) && \r\n                        <List  className={classes.list}> \r\n                            {\r\n                                info[extra_curriculam].list.map( item => \r\n                                    <ListItem style={{borderBottom:'2px solid #fff' , padding : '0px 5px'}}> \r\n                                        <ListItem> {item.curriculamName} </ListItem>\r\n                                        { item.curriculamDetails && <ListItem> {item.curriculamDetails} </ListItem>}\r\n                                        { item.description && <ListItem> {item.description} </ListItem>}\r\n                                    </ListItem>)\r\n                            }\r\n                        </List>\r\n                    }\r\n\r\n\r\n                </Grid>\r\n            }\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default TemplateBody\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Container,\r\n    Grid,\r\n    List,\r\n    ListItemIcon\r\n    } from '@material-ui/core';\r\n\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport PhoneIcon from '@material-ui/icons/Phone';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport TemplateBody from './templateBody'\r\nimport LineBreak from '../../../util/lineBreak';\r\n\r\nconst useStyles = makeStyles((theme) => ({ \r\n    root : {\r\n         padding: '10px 0px'\r\n    },\r\n    imgContainer: {\r\n        marginRight:20\r\n    },\r\n    nameContainer: {\r\n        fontSize:30 , \r\n        fontWeight:'bold',\r\n        textAlign:'left',\r\n        marginBottom:'-15px',\r\n        fontFamily: \"'Bree Serif', serif\",\r\n        \r\n    },\r\n    img: {\r\n        width: 150 ,\r\n        height:150 ,\r\n        border: '1px solid'\r\n    },\r\n    occuPation:{\r\n        marginBottom:80\r\n    },\r\n    location: {\r\n        textAlign:'center'\r\n    } ,\r\n    iconHolder : {\r\n        width:'95%', \r\n        justifyContent: 'start',\r\n        fontSize : 14,\r\n        marginTop : 2\r\n    },\r\n    icon : {\r\n        fill: '#ee8f2f',\r\n        marginRight : 10 ,\r\n        fontSize : 20,\r\n    }\r\n\r\n\r\n }))    \r\n\r\n\r\n\r\nconst DefaultTemplate = ({mainData}) => {\r\n    const classes = useStyles()\r\n    return (\r\n        <div>\r\n            <Container className={classes.root}  >\r\n        <Grid container spacing={2} >\r\n            <Grid container item xs={9} > \r\n                <Grid item className={classes.imgContainer} > \r\n                        <img \r\n                            src={   mainData.profile.photoUrl[1] =='t' ? \r\n                                        mainData.profile.photoUrl: \r\n                                    mainData.profile.photoUrl[1]}  \r\n                            className={classes.img}                     \r\n                        /> \r\n                </Grid> \r\n\r\n                <Grid container item xs={7} > \r\n                    <Grid item xs={12} className={classes.nameContainer}> \r\n                        <span> {mainData.profile.firstName} </span>\r\n                        <span> {mainData.profile.lastName} </span>\r\n                    </Grid>         \r\n                    <Grid className={classes.occuPation}>\r\n                        {mainData.profile.occupation}\r\n                    </Grid>\r\n                </Grid> \r\n            </Grid> \r\n\r\n            <Grid  item xs={3} className={classes.location}> \r\n                <List >\r\n                {mainData.profile.parmanentAddress && <ListItemIcon className={classes.iconHolder}>\r\n                        <LocationOnIcon className={classes.icon}/>\r\n                        <span>{mainData.profile.parmanentAddress}</span>\r\n                    </ListItemIcon>}\r\n\r\n                    {mainData.profile.currentAddress && <ListItemIcon className={classes.iconHolder}>\r\n                        <LocationOnIcon style={{color:'transparent'}}/>\r\n                        <LocationOnIcon className={classes.icon}/>\r\n                        <span>{`Currently ${mainData.profile.currentAddress}`}</span>\r\n                    </ListItemIcon>}\r\n\r\n                    {mainData.profile.phoneNumber && <ListItemIcon className={classes.iconHolder}>\r\n                        <PhoneIcon className={classes.icon}/>\r\n                        <span>{mainData.profile.phoneNumber}</span>\r\n                    </ListItemIcon>}\r\n\r\n                    {mainData.profile.email && <ListItemIcon className={classes.iconHolder}>\r\n                        <DraftsIcon className={classes.icon}/>\r\n                        <span>{mainData.profile.email}</span>\r\n                    </ListItemIcon>}\r\n\r\n                    {mainData.profile.website && <ListItemIcon className={classes.iconHolder} >\r\n                        <LanguageIcon className={classes.icon}/>\r\n                        <span>{mainData.profile.website}</span>\r\n                    </ListItemIcon>}\r\n                </List>\r\n            </Grid> \r\n            \r\n        </Grid> \r\n            </Container>\r\n\r\n            <LineBreak/>\r\n\r\n            <TemplateBody info ={mainData}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DefaultTemplate\r\n\r\n\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {\r\n    Card,\r\n    Container,\r\n    Button\r\n    } from '@material-ui/core';\r\nimport html2canvas from 'html2canvas';\r\nimport * as jsPDF from 'jspdf'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport DefaultTemplate from '../templates/defaultTheme/defaultTemplate'\r\n\r\n\r\n\r\n//\r\n\r\nimport { Document, Page } from 'react-pdf';\r\n//\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    card: {\r\n        width : '95%',\r\n        // height : '90vh',\r\n        // padding : 10\r\n    },\r\n\r\n\r\n}))    \r\n\r\n\r\nconst PdfGenerate = ({forwardedRef}) => {\r\n    const classes = useStyles()\r\n    const state = useSelector(state => state)\r\n    const everyItems = Object.keys(state)\r\n    var mainData = {}\r\n    everyItems.map((item , index) => {\r\n    Object.assign(mainData, {[everyItems[index]] : {...state[item].items}});\r\n    })\r\n        \r\n    \r\n    const handleClick = () => {\r\n        html2canvas( forwardedRef.current  , {\r\n            scale: 5,\r\n            useCORS: true,\r\n            allowTaint: true,\r\n          }).then(canvas => {\r\n            const image = canvas.toDataURL('image/jpeg', 100 / 100);\r\n            const doc = new jsPDF({\r\n              orientation: 'portrait',\r\n              unit: 'px',\r\n              format:  'a4',\r\n            });\r\n\r\n        const pageWidth = doc.internal.pageSize.getWidth();\r\n        const pageHeight = doc.internal.pageSize.getHeight();\r\n\r\n        const widthRatio = pageWidth / canvas.width;\r\n        const heightRatio = pageHeight / canvas.height;\r\n        const ratio = widthRatio > heightRatio ? heightRatio : widthRatio;\r\n\r\n        const canvasWidth = canvas.width * ratio;\r\n        const canvasHeight = canvas.height * ratio;\r\n\r\n        let marginX = (pageWidth - canvasWidth) / 2;\r\n        let marginY = (pageHeight - canvasHeight) / 2;\r\n\r\n        doc.addImage(image, 'JPEG', marginX, marginY, canvasWidth, canvasHeight, null, 'SLOW');\r\n        doc.save(`RxResume_${Date.now()}.pdf`);\r\n\r\n\r\n            })\r\n    } \r\n\r\n    const tryOne = () => {\r\n\r\n    }\r\n\r\n    return (\r\n               \r\n        <Card className={classes.card}>     \r\n            <Container  ref={forwardedRef} >\r\n                <DefaultTemplate mainData={mainData}/>\r\n            </Container>\r\n\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ background : '#42c99a'}}\r\n                // onClick={handleClick}> \r\n                onClick={() => <Document inputRef={forwardedRef}><Page/></Document>}> \r\n                DownLoad PDF\r\n            </Button>\r\n        </Card>  \r\n\r\n\r\n        // <Document inputRef={forwardedRef}>\r\n        //     <Page/>\r\n        // </Document>\r\n    \r\n    )\r\n}\r\n\r\nexport default PdfGenerate\r\n","import React,{createRef } from 'react'\r\nimport GeneratePdf from '../../components/showcase/pdfGenerate/pdfGenerate'\r\n\r\n\r\n\r\nconst ShowCase = () => {\r\nconst reff = createRef()\r\n    return (\r\n        <div style={{padding: '10px 20px'}}>\r\n            <GeneratePdf forwardedRef={reff} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowCase\r\n","import React from 'react'\r\n\r\nconst rightSide = () => {\r\n    return (\r\n        <div>\r\n            this is rightSide\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default rightSide\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport { PDFViewer } from '@react-pdf/renderer';\r\n\r\n// import { LeftSide, ShowCase , RightSide } from '../pages/pages'\r\nimport LeftSide from '../pages/leftSide/leftSide'\r\nimport ShowCase from '../pages/showCase/showCase'\r\nimport RightSide from '../pages/rightSide/rightSide'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(1),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n\r\nconst Pages = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n            <div className={classes.root}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={3}>\r\n                        <LeftSide className={classes.paper}/>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                            <ShowCase className={classes.paper}/>\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                        <RightSide className={classes.paper}/>\r\n                    </Grid>                \r\n                </Grid>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Pages\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\nimport './App.css'\nimport { ThemeProvider } from '@material-ui/core'\nimport theme from '../themeProvider/themeProvider'\n\n\nimport Layout from '../layout/layout'\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme} >\n      <Layout/>\n    </ThemeProvider >\n  )\n}\n\nexport default App\n","import {\r\n        ADD_TAB_VALUE , \r\n        ADD_INPUT_VALUE , \r\n        ADD_LIST_ITEM , \r\n        RESET_OBJ ,\r\n        DELETE_LIST_VALUE\r\n        } from '../action/actionTypes'\r\n        \r\nimport info from '../../../constant/jsonFile'\r\nimport {renameObjectKey , resetObj } from '../../../components/util/camelCaseMaker'\r\n\r\nconst initial_state =  info;\r\n\r\nconst reducer = ( state = initial_state , action ) => {\r\n\r\n    switch(action.type) {\r\n        \r\n        case ADD_INPUT_VALUE : {\r\n\r\n                const tab = action.tab \r\n                const path = action.path\r\n                const value = action.value\r\n\r\n            return {\r\n                ...state , \r\n                [tab] : {\r\n                    ...state[tab],\r\n                        items : {\r\n                           ...state[tab].items , \r\n                           [path] : value\r\n                        }    \r\n                    }\r\n                }\r\n        }\r\n\r\n        case ADD_TAB_VALUE : {\r\n            const oldKey = action.oldValue \r\n            const newKey = action.value\r\n            \r\n            state = renameObjectKey(state , oldKey , newKey)\r\n            \r\n            return state\r\n            \r\n        }\r\n\r\n        case ADD_LIST_ITEM : {\r\n            const item = action.item \r\n            const tab = action.tab     \r\n            return {\r\n                ...state ,\r\n                [tab] : {\r\n                    ...state[tab],\r\n                    items : {\r\n                        ...state[tab].items,\r\n                        list : [...state[tab].items.list ,item]\r\n                    }\r\n                }\r\n            }\r\n            \r\n        }\r\n\r\n        case RESET_OBJ : {\r\n            let tab = action.tab\r\n            let resetedState = resetObj(state[tab].items)\r\n            \r\n            return {\r\n                ...state ,\r\n                [tab] : {\r\n                    ...state[tab],\r\n                    items : resetedState\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n       case DELETE_LIST_VALUE : {\r\n           const tab = action.tab\r\n           const list = action.list\r\n           return{\r\n               ...state ,\r\n                [tab] : {\r\n                    ...state[tab],\r\n                    items : {\r\n                        ...state[tab].items,\r\n                        list: list\r\n                    }\r\n                }\r\n           }\r\n       }\r\n\r\n\r\n        default : {  \r\n            return state\r\n        }\r\n    } \r\n}\r\n\r\n\r\nexport default reducer","const info  = {\r\n  profile :   {         \r\n        items :  { photoUrl : '' , firstName : '' , lastName : '' , occupation : '' , parmanentAddress : '' , currentAddress : '' , phoneNumber : '' , website : '' , email : ''} \r\n    } ,\r\n\r\n    objective : { \r\n         \r\n        items : { shouldshow : true , objectiveHeader : '' , description : ''}\r\n    } , \r\n\r\n     work_experience : { \r\n       \r\n        items :  { shouldshow : true , list : [] , orgName : '' , role : '' , startDate : '' , endDate : '' , description : '' } \r\n    } , \r\n    education : { \r\n        \r\n        items :  { shouldshow : true , list : [] , institutionName : '' , major : '' , grade : '' , startDate : '' , endDate : '' , description : '' } \r\n    } , \r\n    awards :  { \r\n    \r\n        items :  { shouldshow : true , list : [] ,title : '' , subtitle : '' , description : '' } \r\n    } , \r\n    certifications : { \r\n        \r\n        items :  { shouldshow : true , list : [] , name : '' , authority : '' , description : '' } \r\n    } , \r\n    skill : { \r\n       \r\n        items :  { shouldshow : true , list : [] , skill : '' } \r\n    } , \r\n    hobby :  { \r\n       \r\n        items :  { shouldshow : true , list : [] , hobby : '' } \r\n    } , \r\n    languages : { \r\n        \r\n        items :  { shouldshow : true , list : [] , languageName : '' , level : '' , rating : '' } \r\n    } , \r\n    references : { \r\n        \r\n        items :  { shouldshow : true , list : [] , name : '' , position : '' , phoneNumber : '' ,  emailAddress : '' , description : '' } \r\n    } ,\r\n    extra_curriculam : { \r\n        \r\n        items :  { shouldshow : true , list : [] , curriculamName : '' , curriculamDetails: '' , description : '' } \r\n    } \r\n}\r\n\r\nconst newState = JSON.parse(JSON.stringify(info));\r\n\r\n\r\nexport default newState ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\n\nimport reducer from './store/leftSide/reducer/reducer'\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\n\nconst store = createStore(reducer , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nconst app = (  \n    <Provider store = {store}>\n      <App />\n    </Provider>\n    )\n\nReactDOM.render( app ,document.getElementById('root'));\n\n\n"],"sourceRoot":""}